/* eslint-disable @next/next/no-img-element */
import { AxiosResponse } from "axios";
import { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import qs from "qs";
import Blogs from "../components/Portfolio/Blogs/Blogs";
import CallToAction from "../components/Portfolio/CallToAction";
import Footer from "../components/Portfolio/Footer";
import Fqa from "../components/Portfolio/Fqa";
import Header from "../components/Portfolio/Header";
import Navigation from "../components/Portfolio/Navigation";
import Portfolio from "../components/Portfolio/Portfolio";
import Projects from "../components/Portfolio/Projects/Projects";
import Specialities from "../components/Portfolio/Specialities/Specialities";
import Testimonial from "../components/Portfolio/Testimonial/Testimonial";
import { fetchArticles, fetchHeaders, fetchSocials } from "../http";
import {
  IArticle,
  ICollectionResponse,
  IHeader,
  IQueryOptions,
  ISocial,
} from "../types";

interface IPropTypes {
  articles: {
    items: IArticle[];
  };

  headers: {
    item: IHeader;
  };
  socials: {
    items: ISocial[];
  };
}

const Home: NextPage<IPropTypes> = ({ headers, socials, articles }) => {
  return (
    <div>
      <Head>
        <title>Md Maruf - Personal Portfolio</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/* Navigation */}
      <Navigation />

      {/* Header */}
      <Header header={headers.item} socials={socials.items} />

      {/* Specialities */}
      <Specialities />

      {/* Projects */}
      <Projects />

      {/* Portfolio */}
      <Portfolio />

      {/* Testimonial */}
      <Testimonial />

      {/* Blogs */}
      <Blogs articles={articles.items} />

      {/* fqa */}
      <Fqa />

      {/* call to action */}
      <CallToAction />

      {/* Footer */}
      <Footer />
    </div>
  );
};

export const getServerSideProps: GetServerSideProps = async ({ query }) => {
  // fetch headers
  const HeaderOptions: Partial<IQueryOptions> = {
    populate: ["Image"],
  };

  const HeaderQueryString = qs.stringify(HeaderOptions);

  const { data: headers }: AxiosResponse<ICollectionResponse<IHeader[]>> =
    await fetchHeaders(HeaderQueryString);

  // fetch socials
  const { data: socials }: AxiosResponse<ICollectionResponse<ISocial[]>> =
    await fetchSocials();

  // fetch articles
  const options: Partial<IQueryOptions> = {
    populate: ["Image"],
    sort: ["id:desc"],
  };

  const queryString = qs.stringify(options);

  const { data: articles }: AxiosResponse<ICollectionResponse<IArticle[]>> =
    await fetchArticles(queryString);

  return {
    props: {
      headers: {
        item: headers.data[0],
      },
      socials: {
        items: socials.data,
      },
      articles: {
        items: articles.data,
      },
    },
  };
};

export default Home;
